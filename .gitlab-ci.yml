image: debian:bullseye

variables:
  LC_ALL: "C.UTF-8"

before_script:
  - echo $fdroid_keystore_base64 | base64 -d >keystore.jks
  - chmod 600 fdroid/config.py keystore.jks
  - mkdir -p fdroid/repo
  - apt-get update && apt-get install --no-install-recommends --yes wget fdroidserver lzip apksigner && apt-get clean && rm -rf /var/lib/apt/lists/*
  # Debian has apksigner depend on binfmt support which isn't very docker friendly
  # We create a shell wrapper instead
  - echo -e '#!/bin/sh\njava -jar /usr/lib/android-sdk/build-tools/debian/apksigner.jar "$@"' > /usr/local/bin/apksigner
  - chmod +x /usr/local/bin/apksigner

pages:
  stage: deploy
  script:
  - (cd fdroid/repo && while read -r line || [ -n "$line" ]; do rm -f $line; done < ../../cleanup.txt)
  - ./download.py
  - cd fdroid
  - echo "keypass=\"$fdroid_keypass\"" >>config.py
  - echo "keystorepass=\"$fdroid_keystorepass\"" >>config.py
  - fdroid update
  - rm -rf archive
  - mkdir /fdroid && fdroid server update
  - rm -rf /fdroid/archive
  - cd .. && mkdir public && mv -v /fdroid public
  artifacts:
    paths:
    - public
    expire_in: 1 week
  only:
  - master
  - schedules
  cache:
    paths:
    - cache
    - fdroid/repo/*.apk
